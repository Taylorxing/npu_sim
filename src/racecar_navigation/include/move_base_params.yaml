# Move base node parameters. For full documentation of the parameters in this file, please see
#
#  http://www.ros.org/wiki/move_base
#
shutdown_costmaps: false

controller_frequency: 5.0 # 向底盘控制移动话题cmd_vel发送命令的频率 5 10
controller_patience: 3.0 # 在空间清理操作执行前,控制器花多长时间等有效控制下发


planner_frequency: 1.0 # 全局规划操作的执行频率.如果设置为0.0,则全局规划器仅在接收到新的目标点 1.0 10
planner_patience: 5.0 # 在空间清理操作执行前,留给规划器多长时间来找出一条有效规划 5

oscillation_timeout: 10.0 # 执行修复机制前,允许振荡的时长
oscillation_distance: 0.2 # 来回运动在多大距离以上不会被认为是振荡

 
# local planner - default is trajectory rollout
# base_local_planner: "dwa_local_planner/DWAPlannerROS"

base_global_planner: "global_planner/GlobalPlanner" #alternatives: global_planner/GlobalPlanner, carrot_planner/CarrotPlanner
clearing_rotation_allowed: false   # 决定做清理空间操作时,机器人是否原地旋转




#We plan to integrate recovery behaviors for turtlebot but currently those belong to gopher and still have to be adapted.
## recovery behaviors; we avoid spinning, but we need a fall-back replanning
#recovery_behavior_enabled: true

#recovery_behaviors:
  #- name: 'super_conservative_reset1'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'conservative_reset1'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'aggressive_reset1'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'clearing_rotation1'
    #type: 'rotate_recovery/RotateRecovery'
  #- name: 'super_conservative_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'conservative_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'aggressive_reset2'
    #type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'clearing_rotation2'
    #type: 'rotate_recovery/RotateRecovery'

#super_conservative_reset1:
  #reset_distance: 3.0
#conservative_reset1:
  #reset_distance: 1.5
#aggressive_reset1:
  #reset_distance: 0.0
#super_conservative_reset2:
  #reset_distance: 3.0
#conservative_reset2:
  #reset_distance: 1.5
#aggressive_reset2:
  #reset_distance: 0.0
